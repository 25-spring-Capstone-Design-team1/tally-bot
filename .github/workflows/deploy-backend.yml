name: Deploy Backend to EC2

on:
  push:
    branches:
      - dev
    paths:
      - 'api-backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'
            cd /home/ssm-user/app/tally-bot/api-backend/tallybot_back

            echo "📥 [1] 최신 코드 강제 동기화"
            git fetch origin
            git reset --hard origin/dev
            git clean -fd

            echo "🔨 [2] 기존 빌드 결과 제거 및 재빌드"
            rm -rf build/
            ./gradlew clean build -x test

            echo "🔍 [3] 빌드된 JAR 확인"
            ls -alh ./build/libs

            echo "🛑 [4] 기존 모든 Java 프로세스 종료"
            pkill -f 'java' || true
            sleep 3

            echo "🚀 [5] 새 애플리케이션 실행"
            JAR_FILE=$(ls ./build/libs/*.jar | grep 'tallybot_back' | head -n 1)
            nohup java -jar "$JAR_FILE" --spring.profiles.active=rds > app.log 2>&1 &
            echo \$! > app.pid
            sleep 10

            echo "✅ [6] 헬스 체크"
            curl -f http://localhost:8080/app || echo "⚠️ Health check failed"

            echo "🧪 [7] 테스트 시나리오 실행"
            BASE_URL="http://${{ secrets.AWS_HOST }}:8080"

            curl -X POST "\$BASE_URL/api/group/create" -H "Content-Type: application/json" -d '{
              "groupId": 3,
              "groupName": "테스트 그룹",
              "member": "지훈"
            }'
            echo

            curl -X POST "\$BASE_URL/api/group/create" -H "Content-Type: application/json" -d '{
              "groupId": 3,
              "groupName": "테스트 그룹",
              "member": "준호"
            }'
            echo

            curl -X POST "\$BASE_URL/api/chat/upload" -H "Content-Type: application/json" -d '[
              {
                "groupId": 3,
                "timestamp": "2025-05-30 13:20:00",
                "memberId": 4,
                "message": "정산 ㄱ"
              },
              {
                "groupId": 3,
                "timestamp": "2025-05-30 13:21:00",
                "memberId": 5,
                "message": "5000원임"
              }
            ]'
            echo

            curl -X POST "\$BASE_URL/api/calculate/start" -H "Content-Type: application/json" -d '{
              "groupId": 3,
              "startTime": "2025-05-30 13:00:00",
              "endTime": "2025-05-30 14:00:00"
            }'
            echo
          EOF
